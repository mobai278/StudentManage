#pragma checksum "C:\Users\86138\Downloads\Compressed\ASP.NET学生管理系统(公众号：程序员小R)\StudentManage\StudentManage\Areas\StudentManage\Views\Score\StudentIndex.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "af39505d40326b56f56b4adbb1b881fc7b5bc780"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_StudentManage_Views_Score_StudentIndex), @"mvc.1.0.view", @"/Areas/StudentManage/Views/Score/StudentIndex.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"af39505d40326b56f56b4adbb1b881fc7b5bc780", @"/Areas/StudentManage/Views/Score/StudentIndex.cshtml")]
    #nullable restore
    public class Areas_StudentManage_Views_Score_StudentIndex : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 2 "C:\Users\86138\Downloads\Compressed\ASP.NET学生管理系统(公众号：程序员小R)\StudentManage\StudentManage\Areas\StudentManage\Views\Score\StudentIndex.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            WriteLiteral("<div class=\"layui-card layadmin-header\">\n    <div class=\"layui-breadcrumb\" lay-filter=\"breadcrumb\" style=\"visibility: visible;padding: 15px;\">\n        <a");
            BeginWriteAttribute("lay-href", " lay-href=\"", 189, "\"", 200, 0);
            EndWriteAttribute();
            WriteLiteral(">主页</a><span");
            BeginWriteAttribute("lay-separator", " lay-separator=\"", 213, "\"", 229, 0);
            EndWriteAttribute();
            WriteLiteral(">/</span>\n        <a><cite>学生管理</cite></a><span");
            BeginWriteAttribute("lay-separator", " lay-separator=\"", 277, "\"", 293, 0);
            EndWriteAttribute();
            WriteLiteral(">/</span>\n        <a><cite>学生成绩管理</cite></a>\n    </div>\n</div>\n\n");
            WriteLiteral("\n\n");
            WriteLiteral("<table class=\"layui-hide\" id=\"tableList\" lay-filter=\"List\"></table>\n\n\n");
            WriteLiteral(@"<script type=""text/template"" id=""add_box"">
    <div class=""layui-form layui-form-pane"" style=""padding:10px"">
        <input type=""text"" name=""id"" id=""box_id"" class=""layui-input"" style=""display:none"">
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">学生姓名</label>
            <div name=""studentId"" id=""box_studentId"" lay-filter=""box_studentId"" class=""layui-input-block xm-select-demo""></div>
            <div name=""studentName"" style=""display: none;"" lay-filter=""box_studentId"" class=""layui-input-block xm-select-demo""></div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">所属专业</label>
            <div name=""majorId"" id=""box_majorId"" class=""layui-input-block xm-select-demo""></div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">课程名称</label>
            <div name=""courseId"" id=""box_courseId"" class=""layui-input-block xm-select-demo""></div>
        </div>
        <div class=""layui-form-item""");
            WriteLiteral(@">
            <label class=""layui-form-label"">学时</label>
            <div class=""layui-input-block"">
                <input type=""number"" name=""stuTime"" id=""box_hours"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">学分</label>
            <div class=""layui-input-block"">
                <input type=""number"" name=""stuGrade"" id=""box_credit"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">成绩</label>
            <div class=""layui-input-block"">
                <input type=""number"" name=""stuScore"" id=""box_score"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <button class=""layui-btn"" style=""display:none;"" lay-submit lay-filter=""submitForm"" id=""submitForm"">提交</button>
    </div>
</script>

<script>
    lay");
            WriteLiteral(@"ui.use(['table', 'form', 'tree'],
        function () {
            var $ = layui.$;
            var table = layui.table;
            var form = layui.form;
            var xmSelect = layui.xmSelect;
			
		    
			
			

            function initIndex() {
                table.render({
                    id: 'List',
                    elem: '#tableList',
                    url: '/StudentManage/Score/List',
                    title: '课程数据表',
                    cols: [
                        [
                            { type: 'checkbox', fixed: 'left' },
                            { field: 'id', title: 'ID', width: 20, fixed: 'left', unresize: true, sort: true },
                            { field: 'studentId', title: 'studentId', width: 20, fixed: 'left', unresize: true, sort: true },
                            { field: 'courseId', title: 'courseId', width: 20, fixed: 'left', unresize: true, sort: true },
");
            WriteLiteral(@"                            { field: 'studentName', title: '学生姓名', width: 150, align: 'center' },
                            { field: 'courseId', title: '课程编号', width: 150, align: 'center' },
                            { field: 'majorName', title: '专业名称', width: 150, align: 'center' },
                            { field: 'courseName', title: '课程名称', width: 150, align: 'center' },
                            { field: 'stuTime', title: '学时', width: 150, align: 'center' },
                            { field: 'stuGrade', title: '学分', width: 150, align: 'center' },
                            { field: 'stuScore', title: '成绩', width: 150, align: 'center' },
                        ]
                    ],
                    done: function () { // 隐藏id列
                        $(""[data-field='id']"").css('display', 'none');
                        $(""[data-field='studentId']"").css('display', 'none');
                        $(""[data-field='courseId']"").css('display', 'none');
                    },
             ");
            WriteLiteral(@"       page: true
                });
            }
     
		
	 
            //初始化列表页面
            initIndex();



            //初始化表单页面
            function initForm(formObj, dataObj) {
                console.log(dataObj);

                //初始化学生下拉框
                $.ajax({
                    type: ""GET"",
                    url: '/StudentManage/Student/ListTotal',
                    dataType: ""json"",
                    beforeSend: function () {
                    },
                    success: function (res) {
                        if (res.msg) {
                            var studentSelect = xmSelect.render({
                                el: '#box_studentId',
                                radio: true,
                                clickClose: true,
                                name: 'studentId',
                                data:res.data,
                            })
							
                            if (!!dataObj) {
                                studentSelect.setValue([
       ");
            WriteLiteral(@"                             { name: dataObj.studentName, value: dataObj.studentId }
                                ]);
                                
                                //置为不可选择
                                document.getElementById('box_studentId').onclick = function () {
                                    studentSelect.update({ disabled: true });
                                }
                            }
                        }
                    },
                    complete: function () {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
                });

                //初始化专业下拉框
                $.ajax({
                    type: ""GET"",
                    url: '/StudentManage/Base/MajorList',
                    dataType: ""json"",
                    beforeSend: function () {
                    },
                    success: function (res) {
                        if (res.msg) {
                ");
            WriteLiteral(@"            var majorSelect = xmSelect.render({
                                el: '#box_majorId',
                                radio: true,
                                clickClose: true,
                                name: 'majorId',
                                data: res.data,
                                on: function (data) {
                                    //change, 此次选择变化的数据,数组
                                    var change = data.change;
                                    //isAdd, 此次操作是新增还是删除
                                    var isAdd = data.isAdd;

                                }
                            });
                            if (!!dataObj) {
                                majorSelect.setValue([
                                    { name: dataObj.majorName, value: dataObj.majorId }
                                ]);
                                //置为不可选择
                                document.getElementById('box_majorId').onclick = function () {
             ");
            WriteLiteral(@"                       majorSelect.update({ disabled: true });
                                }
                            }
                        }
                    },
                    complete: function () {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
                });

                //初始化课程下拉框
                $.ajax({
                    type: ""GET"",
                    url: '/StudentManage/Course/CourseList',
                    dataType: ""json"",
                    beforeSend: function () {
                    },
                    success: function (res) {
                        if (res.msg) {
                            var courseSelect = xmSelect.render({
                                el: '#box_courseId',
                                radio: true,
                                clickClose: true,
                                name: 'courseId',
                                data: res.data,
         ");
            WriteLiteral(@"                       on: function (data) {
                                    //change, 此次选择变化的数据,数组
                                    var change = data.change;
                                    //isAdd, 此次操作是新增还是删除
                                    var isAdd = data.isAdd;

                                }
                            });

                            if (!!dataObj) {
                                courseSelect.setValue([
                                    { name: dataObj.courseName, value: dataObj.courseId }
                                ]);
                                //置为不可选择
                                document.getElementById('box_courseId').onclick = function () {
                                    courseSelect.update({ disabled: true });
                                }
                            }
                        }
                    },
                    complete: function () {
                    },
                    error: function (XMLHttpRequest,");
            WriteLiteral(@" textStatus, errorThrown) {
                    }
                });

                if (!!dataObj) {
                    $(""#box_id"").val(dataObj.id);
                    $(""#box_hours"").val(dataObj.stuTime);
                    $(""#box_credit"").val(dataObj.stuGrade);
                    $(""#box_score"").val(dataObj.stuScore);
                }

                //表单提交
                form.on('submit(submitForm)',
                    function (data) {
                        var url = '/StudentManage/Score/Add';
                        if (!!data.field.id) {
                            url = '/StudentManage/Score/Edit';
                        }
                        $.ajax({
                            type: ""POST"",
                            url: url,
                            data: data.field,
                            dataType: ""json"",
                            beforeSend: function () {
                            },
                            success: function (data) {
                        ");
            WriteLiteral(@"        if (data.msg) {
                                    layer.msg(data.message, { icon: 6, time: 1000, shade: 0.08 });
                                    layer.close(formObj);
                                    initIndex();
                                } else {
                                    layer.msg(data.message, { icon: 5, time: 1000, shade: 0.08 });
                                }
                            },
                            complete: function () {
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                            }
                        });
                    });
                form.render();
                return false;
            }

            //页面事件
            var active = {
                reload: function () {
                
                    //执行重载
                    table.reload('List',
                        {
                            page: {
                             ");
            WriteLiteral(@"   curr: 1 //重新从第 1 页开始
                            },
                            where: {
                                StudentName: $('#studentName').val(),
                                CourseName: $('#courseName').val()
                            }
                        },
                        'data');
                },
                add: function () {
                    var str = $('#add_box').html();
                    var addForm = layer.open({
                        title: ""添加"",
                        type: 1,
                        area: ['600px', '550px'],
                        content: str,
                        resize: true,
                        scrollbar: false,
                        fixed: false,
                        btn: ['确定', '取消'],
                        yes: function (index, obj) { //保存按钮事件
                            $(""#submitForm"").click();
                        },
                        btn2: function (index, obj) { //窗口关闭按钮事件
                         ");
            WriteLiteral(@"   layer.close(index);
                        },
                        cancel: function (index) { //窗口关闭按钮事件
                            layer.close(index);
                        }
                    });

                    initForm(addForm);
                }
            };

            //监听页面工具事件（搜索、新增、刷新等）
            $('.demoTable .layui-btn').on('click',
                function () {
                    var type = $(this).data('type');
                    active[type] ? active[type].call(this) : '';
                });

            //监听行工具事件（编辑、删除等）
            table.on('tool(List)',
                function (obj) {
                    var data = obj.data;
                    console.log(obj);
                    if (obj.event === 'del') {
                        layer.confirm('真的删除行么？',
                          function (index) {
                               $.ajax({
                                   type: ""POST"",
                                   url: '/StudentManage/Score/Delete',
        ");
            WriteLiteral(@"                           data: { id: data.id },
                                    dataType: ""json"",
                                    beforeSend: function () {
                                    },
                                    success: function (data) {
                                        if (data.msg) {
                                            layer.msg(data.message, { icon: 6, time: 1000, shade: 0.08 });
                                            layer.close(index);
                                            initIndex();
                                        } else {
                                            layer.msg(data.message, { icon: 5, time: 1000, shade: 0.08 });
                                        }
                                    },
                                    complete: function () {
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    }
  ");
            WriteLiteral(@"                              });
                            });
                    }
                    if (obj.event === 'edit') {
                        var editForm = layer.open({
                            title: ""编辑"",
                            type: 1,
                            area: ['600px', '550px'],
                            content: $('#add_box').html(),
                            resize: true,
                            scrollbar: false,
                            fixed: false,
                            btn: ['确定', '取消'],
                            yes: function (index, obj) { //保存按钮事件
                                $(""#submitForm"").click();
                            },
                            btn2: function (index, obj) { //窗口关闭按钮事件
                                layer.close(index);
                            },
                            cancel: function (index) { //窗口关闭按钮事件
                                layer.close(index);
                            }
             ");
            WriteLiteral("           });\n\n                        initForm(editForm, data);\n                    }\n\n                });\n        });\n     \n</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591

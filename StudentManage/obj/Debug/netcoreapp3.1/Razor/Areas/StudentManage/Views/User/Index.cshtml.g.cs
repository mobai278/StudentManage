#pragma checksum "C:\Users\86138\Downloads\Compressed\ASP.NET学生管理系统(公众号：程序员小R)\StudentManage\StudentManage\Areas\StudentManage\Views\User\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3287e880dbdf9661e1d3f2451a4368adb02aa5ae"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_StudentManage_Views_User_Index), @"mvc.1.0.view", @"/Areas/StudentManage/Views/User/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3287e880dbdf9661e1d3f2451a4368adb02aa5ae", @"/Areas/StudentManage/Views/User/Index.cshtml")]
    #nullable restore
    public class Areas_StudentManage_Views_User_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 2 "C:\Users\86138\Downloads\Compressed\ASP.NET学生管理系统(公众号：程序员小R)\StudentManage\StudentManage\Areas\StudentManage\Views\User\Index.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            WriteLiteral("<div class=\"layui-card layadmin-header\">\n    <div class=\"layui-breadcrumb\" lay-filter=\"breadcrumb\" style=\"visibility: visible;padding: 15px;\">\n        <a");
            BeginWriteAttribute("lay-href", " lay-href=\"", 189, "\"", 200, 0);
            EndWriteAttribute();
            WriteLiteral(">主页</a><span");
            BeginWriteAttribute("lay-separator", " lay-separator=\"", 213, "\"", 229, 0);
            EndWriteAttribute();
            WriteLiteral(">/</span>\n        <a><cite>用户管理</cite></a><span");
            BeginWriteAttribute("lay-separator", " lay-separator=\"", 277, "\"", 293, 0);
            EndWriteAttribute();
            WriteLiteral(">/</span>\n        <a><cite>用户管理</cite></a>\n    </div>\n</div>\n\n");
            WriteLiteral(@"<div class=""demoTable"" style=""padding-left: 15px;"">
    <div style=""display: inline-block;"">
        用户名/真实姓名：
        <div class=""layui-inline"">
            <input class=""layui-input"" name=""userName"" id=""userName"" autocomplete=""off"" placeholder=""请输入用户名/真实姓名"">
        </div>
        手机号：
        <div class=""layui-inline"">
            <input class=""layui-input"" name=""phone"" id=""phone"" autocomplete=""off"" placeholder=""请输入手机号"">
        </div>
        <button class=""layui-btn"" data-type=""reload"">搜索</button>
    </div>
    <div style=""float: right;padding-right: 10px;"">
        <button class=""layui-btn"" data-type=""add"">新增</button>
    </div>
</div>

");
            WriteLiteral(@"<table class=""layui-hide"" id=""userList"" lay-filter=""List""></table>

<script type=""text/html"" id=""barDemo"">
    <font color=""#F3F0F0""><a class=""layui-btn layui-btn-sm"" lay-event=""edit"">编辑</a></font>
    <font color=""#F3F0F0""><a class=""layui-btn layui-btn-danger layui-btn-sm"" lay-event=""del"">删除</a></font>
</script>

");
            WriteLiteral(@"<script type=""text/template"" id=""add_box"">
    <div class=""layui-form layui-form-pane"" style=""padding:10px"">
        <input type=""text"" name=""id"" id=""box_id"" class=""layui-input"" style=""display:none"">
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">用户编号</label>
            <div class=""layui-input-block"">
                <input type=""text"" name=""serialNumber"" id=""box_serialNumber"" autocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">用户名</label>
            <div class=""layui-input-block"">
                <input type=""text"" name=""userName"" id=""box_userName"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">真实姓名</label>
            <div class=""layui-input-block"">
                <input type=""text"" name=""realName"" id=""box_realName"" lay-verify=""required"" a");
            WriteLiteral(@"utocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">手机号</label>
            <div class=""layui-input-block"">
                <input type=""text"" name=""phone"" id=""box_phone"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">性别</label>
            <div class=""layui-input-block"">
                <select name=""sex"" id=""box_sex"" lay-verify=""required"">
                    <option value=""0"">未知</option>
                    <option value=""1"">男</option>
                    <option value=""2"">女</option>
                </select>
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">角色</label>
            <div class=""layui-input-block xm-select-demo"" id=""box_role"">
            </div>
        </div>
        <button class=""layui-btn"" styl");
            WriteLiteral(@"e=""display:none;"" lay-submit lay-filter=""submitForm"" id=""submitForm"">提交</button>
    </div>
</script>

<script>
    layui.use(['table', 'form'],
        function () {
            var $ = layui.$;
            var table = layui.table;
            var form = layui.form;
            var xmSelect = layui.xmSelect;

            function initIndex() {
                table.render({
                    id: 'List',
                    elem: '#userList',
                    url: '/StudentManage/User/List',
                    title: '用户数据表',
                    cols: [
                        [
                            { type: 'checkbox', fixed: 'left' },
                            { field: 'id', title: 'ID', width: 80, fixed: 'left', unresize: true, sort: true },
                            { field: 'serialNumber', title: '编号', width: 250, align: 'center' },
                            { field: 'userName', title: '用户名', width: 300, align: 'center' },
                            { field: 'realName', title: '真实姓名', ");
            WriteLiteral(@"width: 300, align: 'center' },
                            { field: 'phone', title: '手机号', width: 300, align: 'center' },
                            {
                                field: 'sex',
                                title: '性别',
                                width: 200,
                                align: 'center',
                                templet: function (res) {
                                    return res.sex == 1 ? '男' : res.sex == 2 ? ""女"" : ""未知"";
                                }
                            },
                            { fixed: 'right', title: '操作', toolbar: '#barDemo', width: 300, align: 'center' }
                        ]
                    ],
                    done: function () { // 隐藏id列
                        $(""[data-field='id']"").css('display', 'none');
                    },
                    page: true
                });
            }

            //初始化列表页面
            initIndex();

            //初始化表单页面
            function initForm(formOb");
            WriteLiteral(@"j, dataObj) {
                console.log(dataObj);

                $.ajax({
                    type: ""GET"",
                    url: '/StudentManage/Role/ListByUser',
                    data: { userId: !!dataObj ? dataObj.id : 0 },
                    dataType: ""json"",
                    beforeSend: function () {
                    },
                    success: function (res) {
                        if (res.msg) {
                            var roleSelect = xmSelect.render({
                                el: '#box_role',
                                tips: '请选择角色',
                                name: 'role',
                                data: res.data
                            });
                        }
                    },
                    complete: function () {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
                });

                if (!!dataObj) {
                    $(""#box_id"").val(dat");
            WriteLiteral(@"aObj.id);
                    $(""#box_serialNumber"").val(dataObj.serialNumber);
                    $(""#box_userName"").val(dataObj.userName);
                    $(""#box_realName"").val(dataObj.realName);
                    $(""#box_phone"").val(dataObj.phone);
                    $(""#box_sex"").val(dataObj.sex);
                }

                //表单提交
                form.on('submit(submitForm)',
                    function (data) {
                        var url = '/StudentManage/User/Add';
                        if (!!data.field.id) {
                            url = '/StudentManage/User/Edit';
                        }
                        $.ajax({
                            type: ""POST"",
                            url: url,
                            data: data.field,
                            dataType: ""json"",
                            beforeSend: function () {
                            },
                            success: function (data) {
                                if (data.msg)");
            WriteLiteral(@" {
                                    layer.msg(data.message, { icon: 6, time: 1000, shade: 0.08 });
                                    layer.close(formObj);
                                    initIndex();
                                } else {
                                    layer.msg(data.message, { icon: 5, time: 1000, shade: 0.08 });
                                }
                            },
                            complete: function () {
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                            }
                        });
                    });
                form.render();
                return false;
            }

            //页面事件
            var active = {
                reload: function () {
                    var userName = $('#userName');
                    var phone = $('#phone');
                    //执行重载
                    table.reload('List',
                        {
       ");
            WriteLiteral(@"                     page: {
                                curr: 1 //重新从第 1 页开始
                            },
                            where: {
                                UserName: userName.val(),
                                Phone: phone.val()
                            }
                        },
                        'data');
                },
                add: function () {
                    var str = $('#add_box').html();
                    var addForm = layer.open({
                        title: ""添加"",
                        type: 1,
                        area: ['600px', '550px'],
                        content: str,
                        resize: true,
                        scrollbar: false,
                        fixed: false,
                        btn: ['确定', '取消'],
                        yes: function (index, obj) { //保存按钮事件
                            $(""#submitForm"").click();
                        },
                        btn2: function (index, obj) { //窗口关闭");
            WriteLiteral(@"按钮事件
                            layer.close(index);
                        },
                        cancel: function (index) { //窗口关闭按钮事件
                            layer.close(index);
                        }
                    });

                    initForm(addForm);
                }
            };

            //监听页面工具事件（搜索、新增、刷新等）
            $('.demoTable .layui-btn').on('click',
                function () {
                    var type = $(this).data('type');
                    active[type] ? active[type].call(this) : '';
                });

            //监听行工具事件（编辑、删除等）
            table.on('tool(List)',
                function (obj) {
                    var data = obj.data;
                    console.log(obj);
                    if (obj.event === 'del') {
                        layer.confirm('真的删除行么？',
                            function (index) {
                                $.ajax({
                                    type: ""POST"",
                                    url: '/St");
            WriteLiteral(@"udentManage/User/Delete',
                                    data: { id: data.id },
                                    dataType: ""json"",
                                    beforeSend: function () {
                                    },
                                    success: function (data) {
                                        if (data.msg) {
                                            layer.msg(data.message, { icon: 6, time: 1000, shade: 0.08 });
                                            layer.close(index);
                                            initIndex();
                                        } else {
                                            layer.msg(data.message, { icon: 5, time: 1000, shade: 0.08 });
                                        }
                                    },
                                    complete: function () {
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
     ");
            WriteLiteral(@"                               }
                                });
                            });
                    }
                    if (obj.event === 'edit') {
                        var str = $('#add_box').html();
                        var editForm = layer.open({
                            title: ""编辑"",
                            type: 1,
                            area: ['600px', '550px'],
                            content: str,
                            resize: true,
                            scrollbar: false,
                            fixed: false,
                            btn: ['确定', '取消'],
                            yes: function (index, obj) { //保存按钮事件
                                $(""#submitForm"").click();
                            },
                            btn2: function (index, obj) { //窗口关闭按钮事件
                                layer.close(index);
                            },
                            cancel: function (index) { //窗口关闭按钮事件
                     ");
            WriteLiteral("           layer.close(index);\n                            }\n                        });\n\n                        initForm(editForm, data);\n                    }\n                });\n\n        });\n\n</script>\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591

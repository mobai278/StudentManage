#pragma checksum "C:\Users\86138\Downloads\Compressed\ASP.NET学生管理系统(公众号：程序员小R)\StudentManage\StudentManage\Areas\StudentManage\Views\Course\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b958a4540f6a784ce526697d58146000d3bec981"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_StudentManage_Views_Course_Index), @"mvc.1.0.view", @"/Areas/StudentManage/Views/Course/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b958a4540f6a784ce526697d58146000d3bec981", @"/Areas/StudentManage/Views/Course/Index.cshtml")]
    #nullable restore
    public class Areas_StudentManage_Views_Course_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 2 "C:\Users\86138\Downloads\Compressed\ASP.NET学生管理系统(公众号：程序员小R)\StudentManage\StudentManage\Areas\StudentManage\Views\Course\Index.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            WriteLiteral("<div class=\"layui-card layadmin-header\">\n    <div class=\"layui-breadcrumb\" lay-filter=\"breadcrumb\" style=\"visibility: visible;padding: 15px;\">\n        <a");
            BeginWriteAttribute("lay-href", " lay-href=\"", 189, "\"", 200, 0);
            EndWriteAttribute();
            WriteLiteral(">主页</a><span");
            BeginWriteAttribute("lay-separator", " lay-separator=\"", 213, "\"", 229, 0);
            EndWriteAttribute();
            WriteLiteral(">/</span>\n        <a><cite>授课信息管理</cite></a><span");
            BeginWriteAttribute("lay-separator", " lay-separator=\"", 279, "\"", 295, 0);
            EndWriteAttribute();
            WriteLiteral(">/</span>\n        <a><cite>课程管理</cite></a>\n    </div>\n</div>\n\n");
            WriteLiteral(@"<div class=""demoTable"" style=""padding-left: 15px;"">
    <div style=""display: inline-block;"">
        课程名称：
        <div class=""layui-inline"">
            <input class=""layui-input"" name=""name"" id=""name"" autocomplete=""off"" placeholder=""请输入课程名称"">
        </div>
        <button class=""layui-btn"" data-type=""reload"">搜索</button>
    </div>
    <div style=""float: right;padding-right: 10px;"">
        <button class=""layui-btn"" data-type=""add"">新增</button>
    </div>
</div>

");
            WriteLiteral(@"<table class=""layui-hide"" id=""tableList"" lay-filter=""List""></table>

<script type=""text/html"" id=""barDemo"">
    <font color=""#F3F0F0""><a class=""layui-btn layui-btn-sm"" lay-event=""edit"">编辑</a></font>
    <font color=""#F3F0F0""><a class=""layui-btn layui-btn-danger layui-btn-sm"" lay-event=""del"">删除</a></font>
</script>

");
            WriteLiteral(@"<script type=""text/template"" id=""add_box"">
    <div class=""layui-form layui-form-pane"" style=""padding:10px"">
        <input type=""text"" name=""id"" id=""box_id"" class=""layui-input"" style=""display:none"">
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">课程编号</label>
            <div class=""layui-input-block"">
                <input type=""text"" name=""serialNumber"" id=""box_serialNumber"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">课程名称</label>
            <div class=""layui-input-block"">
                <input type=""text"" name=""name"" id=""box_name"" lay-verify=""required"" autocomplete=""off"" class=""layui-input"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">所属专业</label>
            <div name=""majorId"" id=""box_majorId"" class=""layui-input-block xm-select-demo""></div>
        </div>
        <");
            WriteLiteral(@"div class=""layui-form-item"">
            <label class=""layui-form-label"">课程描述</label>
            <div class=""layui-input-block"">
                <textarea id=""box_description"" name=""description"" placeholder=""请输入课程描述"" class=""layui-textarea""></textarea>
            </div>
        </div>


        <button class=""layui-btn"" style=""display:none;"" lay-submit lay-filter=""submitForm"" id=""submitForm"">提交</button>
    </div>
</script>

<script>
    layui.use(['table', 'form', 'tree'],
        function () {
            var $ = layui.$;
            var table = layui.table;
            var form = layui.form;
            var xmSelect = layui.xmSelect;

            function initIndex() {
                table.render({
                    id: 'List',
                    elem: '#tableList',
                    url: '/StudentManage/Course/List',
                    title: '课程数据表',
                    cols: [
                        [
                            { type: 'checkbox', fixed: 'left' },
                            {");
            WriteLiteral(@" field: 'id', title: 'ID', width: 80, fixed: 'left', unresize: true, sort: true },
                            { field: 'majorId', title: 'majorId', width: 80, fixed: 'left', unresize: true, sort: true },
                            { field: 'serialNumber', title: '课程编号', width: 300, align: 'center' },
                            { field: 'name', title: '课程名称', width: 350, align: 'center' },
                            { field: 'majorName', title: '专业名称', width: 350, align: 'center' },
                            { field: 'description', title: '课程描述', width: 350, align: 'center' },
                            { fixed: 'right', title: '操作', toolbar: '#barDemo', width: 300, align: 'center' }
                        ]
                    ],
                    done: function () { // 隐藏id列
                        $(""[data-field='id']"").css('display', 'none');
                        $(""[data-field='majorId']"").css('display', 'none');
                    },
                    page: true
                });
      ");
            WriteLiteral(@"      }

            //初始化列表页面
            initIndex();

            //初始化表单页面
            function initForm(formObj, dataObj) {
                console.log(dataObj);

                $.ajax({
                    type: ""GET"",
                    url: '/StudentManage/Base/MajorList',
                    //data: { userId: !!dataObj ? dataObj.id : 0 },
                    dataType: ""json"",
                    beforeSend: function () {
                    },
                    success: function (res) {
                        if (res.msg) {
                            var majorSelect = xmSelect.render({
                                el: '#box_majorId',
                                radio: true,
                                clickClose: true,
                                name: 'majorId',
                                data: res.data
                            });

                            if (!!dataObj) {
                                $(""#box_id"").val(dataObj.id);
                                $");
            WriteLiteral(@"(""#box_serialNumber"").val(dataObj.serialNumber);
                                $(""#box_name"").val(dataObj.name);
                                $(""#box_description"").val(dataObj.description);
                                majorSelect.setValue([
                                    { name: dataObj.majorName, value: dataObj.majorId }
                                ]);
                            }
                        }
                    },
                    complete: function () {
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
                });

                //表单提交
                form.on('submit(submitForm)',
                    function (data) {
                        var url = '/StudentManage/Course/Add';
                        if (!!data.field.id) {
                            url = '/StudentManage/Course/Edit';
                        }
                        $.ajax({
                            type: ""POST"",");
            WriteLiteral(@"
                            url: url,
                            data: data.field,
                            dataType: ""json"",
                            beforeSend: function () {
                            },
                            success: function (data) {
                                if (data.msg) {
                                    layer.msg(data.message, { icon: 6, time: 1000, shade: 0.08 });
                                    layer.close(formObj);
                                    initIndex();
                                } else {
                                    layer.msg(data.message, { icon: 5, time: 1000, shade: 0.08 });
                                }
                            },
                            complete: function () {
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                            }
                        });
                    });
                form.render();
          ");
            WriteLiteral(@"      return false;
            }

            //页面事件
            var active = {
                reload: function () {
                    //执行重载
                    table.reload('List',
                        {
                            page: {
                                curr: 1 //重新从第 1 页开始
                            },
                            where: {
                                Name: $('#name').val()
                            }
                        },
                        'data');
                },
                add: function () {
                    var str = $('#add_box').html();
                    var addForm = layer.open({
                        title: ""添加"",
                        type: 1,
                        area: ['600px', '550px'],
                        content: str,
                        resize: true,
                        scrollbar: false,
                        fixed: false,
                        btn: ['确定', '取消'],
                        yes: function");
            WriteLiteral(@" (index, obj) { //保存按钮事件
                            $(""#submitForm"").click();
                        },
                        btn2: function (index, obj) { //窗口关闭按钮事件
                            layer.close(index);
                        },
                        cancel: function (index) { //窗口关闭按钮事件
                            layer.close(index);
                        }
                    });

                    initForm(addForm);
                }
            };

            //监听页面工具事件（搜索、新增、刷新等）
            $('.demoTable .layui-btn').on('click',
                function () {
                    var type = $(this).data('type');
                    active[type] ? active[type].call(this) : '';
                });

            //监听行工具事件（编辑、删除等）
            table.on('tool(List)',
                function (obj) {
                    var data = obj.data;
                    console.log(obj);
                    if (obj.event === 'del') {
                        layer.confirm('真的删除行么？',
                 ");
            WriteLiteral(@"           function (index) {
                                $.ajax({
                                    type: ""POST"",
                                    url: '/StudentManage/Course/Delete',
                                    data: { id: data.id },
                                    dataType: ""json"",
                                    beforeSend: function () {
                                    },
                                    success: function (data) {
                                        if (data.msg) {
                                            layer.msg(data.message, { icon: 6, time: 1000, shade: 0.08 });
                                            layer.close(index);
                                            initIndex();
                                        } else {
                                            layer.msg(data.message, { icon: 5, time: 1000, shade: 0.08 });
                                        }
                                    },
                                ");
            WriteLiteral(@"    complete: function () {
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    }
                                });
                            });
                    }
                    if (obj.event === 'edit') {
                        var editForm = layer.open({
                            title: ""编辑"",
                            type: 1,
                            area: ['600px', '550px'],
                            content: $('#add_box').html(),
                            resize: true,
                            scrollbar: false,
                            fixed: false,
                            btn: ['确定', '取消'],
                            yes: function (index, obj) { //保存按钮事件
                                $(""#submitForm"").click();
                            },
                            btn2: function (index, obj) { //窗口关闭按钮事件
                                layer.clo");
            WriteLiteral(@"se(index);
                            },
                            cancel: function (index) { //窗口关闭按钮事件
                                layer.close(index);
                            }
                        });

                        initForm(editForm, data);
                    }

                });
        });
</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
